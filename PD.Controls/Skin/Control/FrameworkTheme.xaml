<ResourceDictionary xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
                    xmlns:data="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data"
                    xmlns:dataPrimitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Data"
                    xmlns:sw="clr-namespace:System.Windows;assembly=System.Windows"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:my="clr-namespace:PD.Controls"
                    xmlns:modulePage="clr-namespace:PD.Controls.FrameWork;assembly=PD.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="frameworkLoadModuleStyle"
           TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent"
                Value="" />
        <Setter Property="FontSize"
                Value="{StaticResource applicationFontsize}">
        </Setter>
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate"
                            Value="True" />
                    <Setter Property="Height"
                            Value="15" />
                    <Setter Property="Margin"
                            Value="8,0,8,8" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter"
                Value="00:00:00.1" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetProperty="(Control.IsEnabled)"
                                                                       Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <Storyboard   RepeatBehavior="Forever">
                                            <DoubleAnimation Duration="0:0:2"
                                                             To="360"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)"
                                                             Storyboard.TargetName="image" />
                                            <DoubleAnimation Duration="0:0:2"
                                                             To="-360"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)"
                                                             Storyboard.TargetName="image1" />
                                        </Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.001"
                                                                       Storyboard.TargetProperty="(Control.IsEnabled)"
                                                                       Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>False</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle x:Name="overlay"
                                   Fill="{StaticResource busyShadowBackBrush}" />
                        <ContentPresenter x:Name="busycontent">
                            <Grid HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Height="40">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Border  BorderBrush="#4B000000"
                                         BorderThickness="1"
                                         CornerRadius="13"
                                         Grid.ColumnSpan="2">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="6"
                                                          BlurRadius="47"
                                                          Opacity="0.515"
                                                          Direction="319" />
                                    </Border.Effect>

                                    <Border BorderThickness="2"
                                            CornerRadius="12">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="White"
                                                              Offset="0" />
                                                <GradientStop Color="#FFBABABA"
                                                              Offset="0.5" />
                                                <GradientStop Color="#FFDADADA"
                                                              Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                                                 StartPoint="0.5,0">
                                                <GradientStop Color="#FFFDFDFD"
                                                              Offset="0" />
                                                <GradientStop Color="#FFB6B6B6"
                                                              Offset="1" />
                                                <GradientStop Color="#FFDADADA"
                                                              Offset="0.798" />
                                                <GradientStop Color="#FFDEDEDE"
                                                              Offset="0.171" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border x:Name="border"
                                                BorderThickness="1"
                                                CornerRadius="12"
                                                Margin="0"
                                                Opacity="0.775">
                                            <Border.Background>
                                                <RadialGradientBrush>
                                                    <RadialGradientBrush.RelativeTransform>
                                                        <CompositeTransform CenterY="0.5"
                                                                            CenterX="0.5"
                                                                            Rotation="-3.084"
                                                                            ScaleY="3.983"
                                                                            ScaleX="1.844"
                                                                            TranslateX="-0.916"
                                                                            TranslateY="0.388" />
                                                    </RadialGradientBrush.RelativeTransform>
                                                    <GradientStop Offset="0" />
                                                    <GradientStop Offset="1" />
                                                    <GradientStop Color="#56000000"
                                                                  Offset="0.337" />
                                                    <GradientStop Color="#4A000000"
                                                                  Offset="0.709" />
                                                </RadialGradientBrush>
                                            </Border.Background>
                                            <Viewbox HorizontalAlignment="Left"
                                                     Width="226">
                                                <ScrollViewer Height="82"
                                                              Margin="0"
                                                              VerticalAlignment="Top"
                                                              VerticalScrollBarVisibility="Disabled"
                                                              Padding="-1"
                                                              BorderThickness="0"
                                                              Foreground="{x:Null}"
                                                              BorderBrush="{x:Null}"
                                                              Width="226">
                                                    <Grid Height="82"
                                                          Width="226">
                                                        <Image x:Name="image"
                                                               Margin="-81,-81,0,3"
                                                               Source="/Images/FrameWork/Load.png"
                                                               Stretch="Fill"
                                                               RenderTransformOrigin="0.5,0.5"
                                                               Width="158"
                                                               Height="160"
                                                               HorizontalAlignment="Left">
                                                            <Image.RenderTransform>
                                                                <CompositeTransform />
                                                            </Image.RenderTransform>
                                                        </Image>
                                                        <Image x:Name="image1"
                                                               Margin="38,1,30,-79"
                                                               Source="/Images/FrameWork/Load.png"
                                                               Stretch="Fill"
                                                               RenderTransformOrigin="0.5,0.5"
                                                               Width="158"
                                                               Height="160">
                                                            <Image.RenderTransform>
                                                                <CompositeTransform />
                                                            </Image.RenderTransform>
                                                        </Image>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Viewbox>
                                        </Border>
                                    </Border>
                                </Border>
                                <ContentPresenter ContentTemplate="{TemplateBinding BusyContentTemplate}"
                                                  Content="{TemplateBinding BusyContent}"
                                                  Margin="85,0,7,0"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center" />

                            </Grid>

                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataAreaStyle"
           TargetType="Border">
        <Setter  Property="Background"
                 Value="{StaticResource DataAreaBackGround}">
        </Setter>
        <Setter  Property="Padding"
                 Value="0,0,0,0">
        </Setter>
        <Setter  Property="BorderThickness"
                 Value="0">
        </Setter>
        <Setter  Property="BorderBrush"
                 Value="{StaticResource DataAreaBorderGround}">
        </Setter>
    </Style>
    <Style x:Key="QueryAreaStyle"
           TargetType="Border">
        <Setter  Property="Background"
                 Value="{StaticResource QueryAreaBackGround}">
        </Setter>
        <Setter  Property="Padding"
                 Value="0,0,0,0">
        </Setter>
        <Setter  Property="BorderThickness"
                 Value="0">
        </Setter>
        <Setter  Property="BorderBrush"
                 Value="{StaticResource QueryAreaBorderGround}">
        </Setter>
    </Style>
    <Style x:Key="ToolBarAreaStyle"
           TargetType="Border">
        <Setter  Property="Background"
                 Value="{StaticResource ToolBarAreaBackGround}">
        </Setter>
        <Setter  Property="Padding"
                 Value="0,0,0,0">
        </Setter>
        <Setter  Property="BorderThickness"
                 Value="0,1,0,1">
        </Setter>
        <Setter  Property="BorderBrush"
                 Value="{StaticResource ToolBarAreaBorderGround}">
        </Setter>
    </Style>
    <Style x:Key="MenuAreaStyle"
           TargetType="Border">
        <Setter  Property="Background"
                 Value="{StaticResource MenuAreaBackGround}">
        </Setter>
        <Setter  Property="Padding"
                 Value="0,0,0,0">
        </Setter>
        <Setter  Property="BorderThickness"
                 Value="0,1,0,1">
        </Setter>
        <Setter  Property="BorderBrush"
                 Value="{StaticResource MenuAreaBorderGround}">
        </Setter>
    </Style>
    <Style x:Key="DataAreaPanelStyle"
           TargetType="my:ModuleAreaPanel">
        <Setter   Property="FontSize"
                  Value="{StaticResource DataAreaFontSize}"></Setter>
        <Setter   Property="Foreground"
                  Value="Black"></Setter>
    </Style>
    <Style x:Key="MenuAreaPanelStyle"
           TargetType="my:ModuleAreaPanel">
        <Setter   Property="FontSize"
                  Value="{StaticResource MenuAreaFontSize}"></Setter>
        <Setter   Property="Foreground"
                  Value="Black"></Setter>
    </Style>
    <Style x:Key="QueryAreaPanelStyle"
           TargetType="my:ModuleAreaPanel">
        <Setter   Property="FontSize"
                  Value="{StaticResource QueryAreaFontSize}"></Setter>
        <Setter   Property="Foreground"
                  Value="Black"></Setter>
    </Style>
    <Style x:Key="ToolBarAreaPanelStyle"
           TargetType="my:ModuleAreaPanel">
        <Setter   Property="FontSize"
                  Value="{StaticResource ToolBarAreaFontSize}"></Setter>
        <Setter   Property="Foreground"
                  Value="Black"></Setter>
    </Style>

    <Style TargetType="data:DataGridCell"
           x:Key="baseDataGridCell">
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="data:DataGridCell">
                    <Grid x:Name="Root"
                          Background="{TemplateBinding Background}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CurrentStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Regular" />
                                <vsm:VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisual"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="FocusVisual"
                                   Margin="0,1,0,1"
                                   Fill="#FFFFFFFF"
                                   Opacity="0"
                                   IsHitTestVisible="false" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Cursor="{TemplateBinding Cursor}" />
                        <Rectangle x:Name="RightGridLine"
                                   Grid.Column="1"
                                   Width="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dataPrimitives:DataGridColumnHeader"
           x:Key="baseDataGridColumnHeader">
        <Setter Property="SeparatorBrush"
                Value="{StaticResource HeaderSeparator}" />
        <Setter Property="SeparatorVisibility"
                Value="Visible" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dataPrimitives:DataGridColumnHeader">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="00:00:0.1" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Normal" />
                                <vsm:VisualState x:Name="MouseOver" />
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SortStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="00:00:0.1" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="Unsorted" />
                                <vsm:VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SortIcon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SortIcon"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SortIcon"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                         To="-1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SortIcon"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)"
                                                         To="3" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BackgroundGradient"
                                   Grid.ColumnSpan="3"
                                   Stretch="Fill"
                                   Fill="{StaticResource ColumnHeaderBackground}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          Grid.ColumnSpan="2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          Cursor="{TemplateBinding Cursor}" />
                        <Path x:Name="SortIcon"
                              Margin="0,-3,1,0"
                              Grid.Column="1"
                              Height="6"
                              Width="10"
                              Fill="#FF7CA9FD"
                              HorizontalAlignment="Right"
                              Stretch="Uniform"
                              Opacity="0"
                              Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z "
                              RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Rectangle x:Name="VerticalSeparator"
                                   Margin="0,2,0,2"
                                   Grid.Column="2"
                                   Width="1"
                                   Fill="{TemplateBinding SeparatorBrush}"
                                   Visibility="{TemplateBinding SeparatorVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellCenter"
           BasedOn="{StaticResource baseDataGridCell}"
           TargetType="data:DataGridCell">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="DataGridCellLeft"
           BasedOn="{StaticResource baseDataGridCell}"
           TargetType="data:DataGridCell">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="DataGridCellRight"
           BasedOn="{StaticResource baseDataGridCell}"
           TargetType="data:DataGridCell">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="IsTabStop"
                Value="False" />
    </Style>

    <Style x:Key="DataGridColumnHeaderCenter"
           BasedOn="{StaticResource baseDataGridColumnHeader}"
           TargetType="dataPrimitives:DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="4" />
    </Style>
    <Style x:Key="DataGridColumnHeaderLeft"
           BasedOn="{StaticResource baseDataGridColumnHeader}"
           TargetType="dataPrimitives:DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="DataGridColumnHeaderRight"
           BasedOn="{StaticResource baseDataGridColumnHeader}"
           TargetType="dataPrimitives:DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform"
                                    X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2"
                                          To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 To="0"
                                                 Storyboard.TargetProperty="X"
                                                 Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3"
                                                  EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 To="1"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="Root" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="X"
                                             Storyboard.TargetName="xform" />
                            <DoubleAnimation Duration="0"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31"
                    CornerRadius="5"
                    Margin="4,4,-4,-4" />
            <Border Background="#152A2E31"
                    CornerRadius="4"
                    Margin="3,3,-3,-3" />
            <Border Background="#252A2E31"
                    CornerRadius="3"
                    Margin="2,2,-2,-2" />
            <Border Background="#352A2E31"
                    CornerRadius="2"
                    Margin="1,1,-1,-1" />
            <Border Background="#FFDC000C"
                    CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Foreground="White"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="topMenuButtonStyle"
           TargetType="RadioButton">
        <Setter Property="Cursor"
                Value="Hand"></Setter>
        <Setter Property="Background"
                Value="#FF448DCA" />
        <Setter Property="Foreground"
                Value="#FF000000" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="4,1,0,0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9"
                                  Offset="0" />
                    <GradientStop Color="#FF8399A9"
                                  Offset="0.375" />
                    <GradientStop Color="#FF718597"
                                  Offset="0.375" />
                    <GradientStop Color="#FF617584"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="NormalBorder" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="MouseBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="NormalBorder" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="CheckBorder" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="PressBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="CheckBorder" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="NormalBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="NormalBorder"
                                BorderThickness="1" />
                        <Border x:Name="MouseBorder"
                                BorderThickness="1"
                                Background="#FF3B9EC5"
                                CornerRadius="5,5,0,0"
                                Opacity="0" />
                        <Border x:Name="PressBorder"
                                BorderThickness="1"
                                Background="#FF2A8CB6"
                                CornerRadius="5,5,0,0"
                                Opacity="0" />
                        <Border x:Name="CheckBorder"
                                BorderThickness="1"
                                CornerRadius="5,5,0,0"
                                Opacity="0"
                                Background="#FF247097">
                            <Border.Effect>
                                <DropShadowEffect Color="#FF62BAE5"
                                                  Direction="0"
                                                  ShadowDepth="0"
                                                  BlurRadius="100" />
                            </Border.Effect>
                        </Border>
                        <ContentControl x:Name="contentPresenter"
                                        Foreground="White"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Grid x:Name="ValidationErrorElement"
                              ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                              Visibility="Collapsed"
                              HorizontalAlignment="Left"
                              Height="2"
                              VerticalAlignment="Top"
                              Width="2">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                                   Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Ellipse Height="14"
                                     Stroke="#FFDB000C"
                                     StrokeThickness="1"
                                     Width="14" />
                            <Ellipse Fill="#FFDB000C"
                                     HorizontalAlignment="Right"
                                     Height="4"
                                     Margin="0,-2,-1,0"
                                     VerticalAlignment="Top"
                                     Width="4" />
                            <Ellipse Fill="Transparent"
                                     HorizontalAlignment="Right"
                                     Height="10"
                                     Margin="0,-5,-4,0"
                                     VerticalAlignment="Top"
                                     Width="10" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="modulePage:DatePickerExtend">
        <Setter Property="Background"
                Value="#FFFFFFFF" />
        <Setter Property="SelectionBackground"
                Value="#FF88C3FF" />
        <Setter Property="Padding"
                Value="4,0,1,0" />
        <Setter Property="BorderBrush"
                Value="#FF848484" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Height"
                Value="22" />
    </Style>
</ResourceDictionary>
